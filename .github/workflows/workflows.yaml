name: CI Pipeline
on:
  push:
    branches:
      - main
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Compress Lambda function
        run: zip -r lambda/lambda.zip lambda/*
      
      - name: Build Docker image
        run: docker build -t serverless-weather-app -f Docker/Dockerfile .
        working-directory: .
      
      - name: Run Docker container
        run: docker run -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -e WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }} 

  terraform:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform

      - name: Validate Terraform
        run: terraform validate
        working-directory: terraform

      - name: Plan Terraform Changes
        run: terraform plan
        working-directory: terraform
        env:
          TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_weather_api_key: ${{ secrets.WEATHER_API_KEY }}

      - name: Apply Terraform Changes
        run: terraform apply -auto-approve
        working-directory: terraform
        env:
          TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_weather_api_key: ${{ secrets.WEATHER_API_KEY }}